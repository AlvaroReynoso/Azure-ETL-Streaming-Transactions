{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "midatafactoryalvaro"
		},
		"LS_DataLake_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LS_DataLake\""
		},
		"LS_SQL_Database_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"LS_SQL_Database\""
		},
		"LS_conexion_storage_general_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LS_conexion_storage_general\""
		},
		"LS_databricks_medallion_accessToken": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accessToken\"de \"LS_databricks_medallion\""
		},
		"LS_transactions_project_accessToken": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accessToken\"de \"LS_transactions_project\""
		},
		"LS_SQL_Database_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "alvaroserver.database.windows.net"
		},
		"LS_SQL_Database_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB_loan_project"
		},
		"LS_SQL_Database_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminalvaro"
		},
		"LS_databricks_medallion_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0627-011511-guaf4c1k"
		},
		"LS_transactions_project_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0627-011511-guaf4c1k"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_DataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_DataLake_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_Database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_Database_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_Database_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_Database_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_Database_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_conexion_storage_general')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_conexion_storage_general_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_databricks_medallion')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1033454553945759.19.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_databricks_medallion_accessToken')]"
					},
					"existingClusterId": "[parameters('LS_databricks_medallion_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_transactions_project')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1033454553945759.19.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_transactions_project_accessToken')]"
					},
					"existingClusterId": "[parameters('LS_transactions_project_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_transactions_KPIs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS_transactions_streaming_project"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "final_csv_enriched_transactions_kpis",
						"container": "csvfinalsmartbank"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "channel",
						"type": "String"
					},
					{
						"name": "total_transactions",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "avg_amount",
						"type": "String"
					},
					{
						"name": "fraud_rate_percent",
						"type": "String"
					},
					{
						"name": "high_value_ratio_percent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_transactions_streaming_general')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS_transactions_streaming_project"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "final_csv_general_transactions",
						"container": "csvfinalsmartbank"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "timestamp",
						"type": "String"
					},
					{
						"name": "merchant",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "channel",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "hour",
						"type": "String"
					},
					{
						"name": "is_fraud_suspected",
						"type": "String"
					},
					{
						"name": "amount_level",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_transactions_enriched_kpis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_Database",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS_transactions_streaming_project"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "channel",
						"type": "varchar"
					},
					{
						"name": "total_transactions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "avg_amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "fraud_rate_percent",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "high_value_ratio_percent",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transaction_KPIs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_Database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_transactions_generals')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_Database",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DS_transactions_streaming_project"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "transaction_id",
						"type": "uniqueidentifier"
					},
					{
						"name": "customer_id",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "timestamp",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "merchant",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "channel",
						"type": "varchar"
					},
					{
						"name": "category",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hour",
						"type": "int",
						"precision": 10
					},
					{
						"name": "is_fraud_suspected",
						"type": "bit"
					},
					{
						"name": "amount_level",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transactions_general"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_Database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_L_transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "transactions_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/luchotessa1@hotmail.com/notebooks_medallon_transactions/goldTransactions"
						},
						"linkedServiceName": {
							"referenceName": "LS_transactions_project",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CD_SQL_trans_generals",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "transactions_gold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "final_csv_general_transactions",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_DataLake",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "transaction_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "transaction_id",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "merchant",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "merchant",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "channel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "month",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "day",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "day",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hour",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "is_fraud_suspected",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_fraud_suspected",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "amount_level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "amount_level",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_transactions_streaming_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_transactions_generals",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CD_SQL_trans_generals_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CD_SQL_trans_generals",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "final_csv_general_transactions",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_DataLake",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "transaction_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "transaction_id",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "merchant",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "merchant",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "channel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "channel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "month",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "day",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "day",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hour",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "is_fraud_suspected",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_fraud_suspected",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "amount_level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "amount_level",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_transactions_streaming_general",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_transactions_generals",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PL_transactions_streaming_project"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-08T22:21:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_transactions_project')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_transactions_streaming_general')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_transactions_generals')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ET_transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "transaction_bronze",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/luchotessa1@hotmail.com/notebooks_medallon_transactions/bronzeTransactions"
						},
						"linkedServiceName": {
							"referenceName": "LS_transactions_project",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "transactions_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "transaction_bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/luchotessa1@hotmail.com/notebooks_medallon_transactions/silverTransactions"
						},
						"linkedServiceName": {
							"referenceName": "LS_transactions_project",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ejecutar Gold Final",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "transactions_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_L_transactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PL_transactions_streaming_project"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-08T19:20:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_transactions_project')]",
				"[concat(variables('factoryId'), '/pipelines/PL_L_transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_trigger_day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_ET_transactions",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2025-07-09T20:27:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ET_transactions')]"
			]
		}
	]
}